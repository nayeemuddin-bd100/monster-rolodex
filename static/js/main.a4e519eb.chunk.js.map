{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/searchbox.component.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filterdmonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAIaA,G,YAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAEhF,mCAAML,EAAMG,QAAQG,KAApB,OAEA,kCAAKN,EAAMG,QAAQI,MAAnB,YCJKC,G,MAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SAEKD,EAAMS,SAASC,KAAK,SAAAP,GAAO,OACxB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCPlBO,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACvB,qBAAKZ,UAAU,SAAf,SACM,uBAAOa,KAAK,SACRF,YAAaA,EACbG,SAAUF,QCqFPG,E,kDAtFb,aAAc,IAAD,8BACX,gBA+CFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SA9CtC,EAAKC,MAAQ,CACZb,SAAU,GAeVU,YAAc,IAnBJ,E,gEA2BO,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAC3BT,SAAWkB,S,+BAsBL,IAAD,EAC2BC,KAAKN,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZU,EAAkBpB,EAASqB,QAAO,SAAA3B,GAAO,OAC7CA,EAAQG,KAAKyB,cAAcC,SAASb,EAAYY,kBAMlD,OACE,sBAAK9B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEW,YAAY,oBACZC,aAAce,KAAKf,eAWrB,cAAC,EAAD,CAAUJ,SAAUoB,W,GA/EVI,aCOHC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a4e519eb.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.styles.css'\r\n\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n        <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\"/>\r\n\r\n        <h3> {props.monster.name} </h3>\r\n        {/* card list e card component er modde monster props e je data gulo deya hoyese sekan teke name tah niyee h2 tag e deya hoyeche! */}\r\n        <p> {props.monster.email} </p>\r\n\r\n    </div>\r\n)","import React from 'react';\r\nimport { Card } from '../card/card.component.jsx';\r\nimport './card-list.styles.css';\r\n\r\n\r\n\r\nexport const CardList = props =>(\r\n    <div className='card-list' >\r\n        {/* App.js e  cardlist e props er maddome je data gulo deya hoyeche ta shobgulo ekta ekta kore show koranor jonno map kora hoyeche  */}\r\n        {props.monsters.map( monster => (\r\n            <Card key={monster.id} monster={monster}/>\r\n            // mapping korar por shob data guloke monster props er maddome Card component e patano hoyeche!\r\n\r\n         ))}      \r\n    </div> \r\n    \r\n)\r\n\r\n","import React from 'react';\r\nimport './searchbox.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n  <div className='search' > \r\n        <input type=\"search\"\r\n            placeholder={placeholder}\r\n            onChange={handleChange}\r\n        />\r\n  </div>\r\n);","import React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component.jsx';\nimport { SearchBox } from './components/search-box/searchbox.component.jsx';\n\nclass App extends Component{\n  constructor(){\n    super()\n\n    this.state = {\n     monsters: [\n      // hard code user koraar bodole componentDidMount er maddome ekane data fetch kora hoyeche! jaa dynamic vabee render hobe !\n      //  {\n      //    name: 'Frankstein',\n      //    id:'abc1'\n      //  },\n      //  {\n      //    name: 'Dracula',\n      //    id: 'abc2'\n      //  },\n      //  {\n      //    name: 'Zombie',\n      //    id: 'abc3'\n      //  }\n     ],\n     searchField : ''\n    }\n\n    // this.handleChange = this.handleChange.bind(this)\n    //class component er modde jodi kono method declare kora hoi tahole this ke bind kore dite hobe!onnothaai eta kaj korbe nah ! \n    //r this ke bind korar poribotte handlechange method e jodi arro function use kori tahole r this ke bind korar dorkar nhai...!\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({\n      monsters : users\n    }))\n  }\n\n  //axios er maddome data ante chailee...!!\n  // componentDidMount(){\n  //   axios.get('https://jsonplaceholder.typicode.com/users')\n  //     .then(response => console.log(response.data))\n  // }\n\n  /* handleChange(e) {\n    this.setState({ searchField: e.target.value });\n    console.log(this);\n  }\n  */\n  // bind na kore arrow function use kora hoyeche\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  }\n\n\n  render() {\n    const { monsters, searchField } = this.state\n    const filterdmonsters = monsters.filter(monster => (\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n\n    ))\n\n    \n\n    return (\n      <div className=\"App\">\n        <h2>Monster Rolodex</h2>\n        <SearchBox\n          placeholder=\" Search Monsters \"\n          handleChange={this.handleChange}\n        />\n\n\n        {/* <input\n          type=\"search\"\n          placeholder=\"Search Monsters\"\n          onChange={(e) => this.setState({ searchField: e.target.value })}\n        /> */}\n        {/* <CardList monsters={ this.state.monsters } /> \n           ekhane monsters props er maddome state er data gulo cardlist e rakha hoyeche */}\n        <CardList monsters={filterdmonsters}/>\n\n        {/* jokon search kora hobe tokon monsters state er shob data show na kore sudumatro filter kora data gulo show korbe  */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}